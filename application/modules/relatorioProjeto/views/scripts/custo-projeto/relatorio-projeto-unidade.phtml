<?php
//criando o objeto
$objPdf = new Base_Tcpdf_Pdf();

$arrKeywords = array(K_CREATOR_SYSTEM,
                             Base_Util::getTranslator('L_TIT_REL_CUSTO_PROJETO'),
                             Base_Util::getTranslator('L_VIEW_CUSTO'),
                             Base_Util::getTranslator('L_VIEW_POR_UNIDADE'),
                             Base_Util::getTranslator('L_VIEW_RELATORIO')
                            );

//Inicia cabeçalho do relatório
$objPdf->iniciaRelatorio(Base_Util::getTranslator('L_TIT_REL_CUSTO_PROJETO')." - ".Base_Util::getTranslator('L_VIEW_POR_UNIDADE'), $arrKeywords);

$objPdf->SetDisplayMode("real");

//-----------------------

// add a page
$objPdf->AddPage();

//Column titles
$header = array(Base_Util::getTranslator('L_VIEW_SIGLA_PROJETO'),
                Base_Util::getTranslator('L_VIEW_MES_INICIO'),
                Base_Util::getTranslator('L_VIEW_MES_FIM'),
                Base_Util::getTranslator('L_VIEW_UNIDADES_METRICA'),
                Base_Util::getTranslator('L_VIEW_VALOR'));

// set font
$objPdf->SetFont('helvetica', 'B', 9);
$objPdf->Cell(15, 6, Base_Util::getTranslator('L_VIEW_UNIDADE').": ", '', 0, 'L');
$objPdf->SetFont('helvetica', '', 9);
$objPdf->Cell(160, 6, $this->arrCustoUnidade[0]['tx_sigla_unidade'], '', 0, 'L');
$objPdf->Ln();

// print colored table
coloredTable($header, $this->arrCustoUnidade, $objPdf);

// ---------------------------------------------------------

//Close and output PDF document
$objPdf->Output('relatorio_custo_projeto_unidade.pdf', 'I');

//============================================================+
// END OF FILE                                                 
//============================================================+

function coloredTable($header,$data, $objPdf){

	$objContratoDefinicaoMetrica = new ContratoDefinicaoMetrica();

	// Colors, line width and bold font
	$objPdf->SetDrawColor(50);
	$objPdf->SetFillColor(240,240,240);
	$objPdf->SetTextColor(0);
	$objPdf->SetLineWidth(0.3);
	$objPdf->SetFont('', 'B',9);
	// Header
	$w = array(66, 17, 17, 40, 40);
		 //array(58, 20, 17, 17, 34, 34);
	for($i = 0; $i < count($header); $i++)
	$objPdf->Cell($w[$i], 7, $header[$i], 1, 0, 'C', 1);
	$objPdf->Ln();
	// Color and font restoration
	$objPdf->SetFillColor(240, 248, 255);
	$objPdf->SetTextColor(0);
	$objPdf->SetFont('','',8);
	// Data
	$fill = 0;

	$totalHora  = 0;
	$totalValor = 0;
	$qtdProjeto = 0;
	foreach($data as $row){

		 //Caso o tamanho da sigla do projeto ultrapasse a linha da coluna
		  //utilizar esta lógica para não sobrepor a coluna.
		  $fin = "";
		  if(strlen($row['tx_sigla_projeto']) > 35){
		 	$fin = "...";
		  	$row['tx_sigla_projeto'] = substr($row['tx_sigla_projeto'],0,35).$fin;
		  }
		 
		$arrDadosMetricaPadrao = $objContratoDefinicaoMetrica->getSiglaUnidadeMetricaPadraoContratoAtivoProjeto($row['cd_projeto']);

		$objPdf->Cell($w[0], 6, $row['tx_sigla_projeto'], 'LR', 0, 'L', $fill);
		$objPdf->Cell($w[1], 6, $row['dt_inicio'], 'LR', 0, 'C', $fill);
		$objPdf->Cell($w[2], 6, $row['dt_fim'], 'LR', 0, 'C', $fill);
		$objPdf->Cell($w[3], 6, number_format($row['ni_total_horas_parcela'],1,',','.'), 'LR', 0, 'R', $fill);
		$objPdf->Cell($w[4], 6, number_format($row['valor_total'],2,',','.')."  ", 'LR', 0, 'R', $fill);
		$objPdf->Ln();
		$fill=!$fill;
		
		$qtdProjeto++;
		$totalHora  += $row['ni_total_horas_parcela'];
		$totalValor += $row['valor_total'];
	}
	
	$objPdf->Cell($w[0], 6, Base_Util::getTranslator('L_VIEW_TOTAL'), 'LTB', 0, 'L',0);
	$objPdf->Cell($w[1], 6, "", 'TB', 0, 'R', 0);
	$objPdf->Cell($w[2], 6, "", 'TB', 0, 'R', 0);
	$objPdf->Cell($w[3], 6, "", 'TB', 0, 'R', 0);
	$objPdf->Cell($w[4], 6, number_format($totalValor,2,',','.')."  ", 'LRTB', 0, 'R', 0);
	$objPdf->Ln();
	
	$objPdf->Cell($w[0], 6, Base_Util::getTranslator('L_VIEW_QTD_PROJETO').": ".$qtdProjeto, '', 0, 'L',0);
	$objPdf->Cell($w[1], 6, "", '', 0, 'R', 0);
	$objPdf->Cell($w[2], 6, "", '', 0, 'R', 0);
	$objPdf->Cell($w[3], 6, "", '', 0, 'R', 0);
	$objPdf->Cell($w[4], 6, "", '', 0, 'R', 0);
}
?>